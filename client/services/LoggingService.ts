// –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
import { ToastService } from './ToastService';

// –¢–∏–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
export interface ConsoleLoggingSettings {
  authContextLogs: boolean; // –õ–æ–≥–∏ AuthContext (—Ç–æ–∫–µ–Ω—ã, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)
  apiCallLogs: boolean; // –õ–æ–≥–∏ API –∑–∞–ø—Ä–æ—Å–æ–≤
  routingLogs: boolean; // –õ–æ–≥–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
  equipmentLogs: boolean; // –õ–æ–≥–∏ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è (–≤–µ—Å—ã, –ø—Ä–∏–Ω—Ç–µ—Ä—ã)
  debugLogs: boolean; // –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –ª–æ–≥–∏
  performanceLogs: boolean; // –õ–æ–≥–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  // –ù–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  loggingSettingsLogs: boolean; // –õ–æ–≥–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  orderAssemblyLogs: boolean; // –õ–æ–≥–∏ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤
  cookieLogs: boolean; // –õ–æ–≥–∏ —Ä–∞–±–æ—Ç—ã —Å cookies
  warehouseMovementLogs: boolean; // –õ–æ–≥–∏ —Å–∫–ª–∞–¥—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π
  productSetsLogs: boolean; // –õ–æ–≥–∏ –Ω–∞–±–æ—Ä–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
}

// –¢–∏–ø—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫ Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π  
export interface ToastLoggingSettings {
  authSuccess: boolean; // –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è/–≤—ã—Ö–æ–¥
  authErrors: boolean; // –û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  tokenRefresh: boolean; // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
  tokenExpiry: boolean; // –ò—Å—Ç–µ—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤
  apiErrors: boolean; // –û—à–∏–±–∫–∏ API –∑–∞–ø—Ä–æ—Å–æ–≤
  equipmentStatus: boolean; // –°—Ç–∞—Ç—É—Å –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  systemNotifications: boolean; // –°–∏—Å—Ç–µ–º–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
}

export interface LoggingSettings {
  console: ConsoleLoggingSettings;
  toast: ToastLoggingSettings;
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Å—Ç–∞—Ä—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
const appStartTime = Date.now();

// –î–µ—Ñ–æ–ª—Ç–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
const defaultSettings: LoggingSettings = {
  console: {
    authContextLogs: true,
    apiCallLogs: false,
    routingLogs: false,
    equipmentLogs: true,
    debugLogs: false,
    performanceLogs: false,
    // –ù–æ–≤—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    loggingSettingsLogs: false,
    orderAssemblyLogs: false,
    cookieLogs: false,
    warehouseMovementLogs: false,
    productSetsLogs: false
  },
  toast: {
    authSuccess: true,
    authErrors: true,
    tokenRefresh: true,
    tokenExpiry: true,
    apiErrors: true,
    equipmentStatus: true,
    systemNotifications: true
  }
};

export class LoggingService {
  private static settings: LoggingSettings = defaultSettings;
  private static isInitialized = false;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–∑ –ë–î
  static async initialize() {
    try {
      const response = await fetch('/api/settings/logging', {
        credentials: 'include'
      });
      
      if (response.ok) {
        const settings = await response.json();
        this.settings = { 
          console: { ...defaultSettings.console, ...settings.console },
          toast: { ...defaultSettings.toast, ...settings.toast }
        };
        console.log('üìã [LoggingService] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∏–∑ —Ñ–∞–π–ª–∞ logging-settings.json', this.settings);
      } else {
        console.log('üìã [LoggingService] –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é');
      }
    } catch (error) {
      console.warn('üìã [LoggingService] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ:', error);
    } finally {
      this.isInitialized = true;
    }
  }

  // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–∫–∞–ª—å–Ω–æ
  static updateSettings(settings: LoggingSettings) {
    this.settings = settings;
    console.log('üìã [LoggingService] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ');
    console.log('üìã [LoggingService] authContextLogs:', this.settings.console.authContextLogs ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–æ—Ç–∫–ª—é—á–µ–Ω—ã');
  }

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  static async saveSettings(settings: LoggingSettings): Promise<boolean> {
    try {
      const response = await fetch('/api/settings/logging', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'include',
        body: JSON.stringify(settings)
      });

      if (response.ok) {
        this.settings = settings;
        console.log('‚úÖ [LoggingService] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', this.settings);
        return true;
      } else {
        let errorData;
        try {
          errorData = await response.json();
        } catch (parseError) {
          errorData = { error: `HTTP ${response.status}: ${response.statusText}` };
        }
        console.error('‚ùå [LoggingService] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:', errorData);
        console.error('‚ùå [LoggingService] –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞:', response.status);
        console.error('‚ùå [LoggingService] –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞:', Object.fromEntries(response.headers));
        return false;
      }
    } catch (error) {
      console.error('‚ùå [LoggingService] –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
      return false;
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫
  static getSettings(): LoggingSettings {
    // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    return {
      console: {
        ...defaultSettings.console,
        ...this.settings.console
      },
      toast: {
        ...defaultSettings.toast,
        ...this.settings.toast
      }
    };
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
  private static formatTimeOnly(timestamp: string): string {
    return new Date(timestamp).toLocaleTimeString('uk-UA', {
      hour12: false,
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    });
  }

  // –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (–∑–∞–º–µ–Ω–∞ utils.log)
  static log(message: string, data?: any, category: keyof ConsoleLoggingSettings = 'debugLogs') {
    if (!this.settings.console[category]) {
      return; // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    }

    const timestamp = new Date().toISOString();
    const timeFromStart = (Date.now() - appStartTime) / 1000;
    console.log(
      `\n‚ïê‚ïê‚ïê‚ïê [${this.formatTimeOnly(timestamp)}] ‚ïê‚ïê‚ïê‚ïê [${timeFromStart.toFixed(2)}s] ‚ïê‚ïê‚ïê‚ïê\n${message}`,
      ...(data !== undefined ? [data, '\n\n'] : ['\n\n'])
    );
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ AuthContext
  static authLog(message: string, data?: any) {
    this.log(message, data, 'authContextLogs');
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ API –∑–∞–ø—Ä–æ—Å–æ–≤
  static apiLog(message: string, data?: any) {
    this.log(message, data, 'apiCallLogs');
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏
  static routeLog(message: string, data?: any) {
    this.log(message, data, 'routingLogs');
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  static equipmentLog(message: string, data?: any) {
    this.log(message, data, 'equipmentLogs');
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
  static perfLog(message: string, data?: any) {
    this.log(message, data, 'performanceLogs');
  }

  // –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  static debugLog(message: string, data?: any) {
    this.log(message, data, 'debugLogs');
  }

  // –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  
  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
  static loggingSettingsLog(message: string, data?: any) {
    this.log(message, data, 'loggingSettingsLogs');
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü–∏–∏ –∑–∞–∫–∞–∑–æ–≤
  static orderAssemblyLog(message: string, data?: any) {
    this.log(message, data, 'orderAssemblyLogs');
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã —Å cookies
  static cookieLog(message: string, data?: any) {
    this.log(message, data, 'cookieLogs');
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–ª–∞–¥—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π
  static warehouseMovementLog(message: string, data?: any) {
    this.log(message, data, 'warehouseMovementLogs');
  }

  // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞–±–æ—Ä–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
  static productSetsLog(message: string, data?: any) {
    this.log(message, data, 'productSetsLogs');
  }

  // Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–µ–∫
  private static showToast(message: { title: string; description?: string; color: 'success' | 'danger' | 'warning' | 'default' }, category: keyof ToastLoggingSettings) {
    if (!this.settings.toast[category]) {
      return; // Toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã –¥–ª—è —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    }
    
    ToastService.show(message);
  }

  // Toast –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  static toastAuthSuccess(email: string) {
    this.showToast({
      title: "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞",
      description: `–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ, ${email}`,
      color: "success"
    }, 'authSuccess');
  }

  // Toast –¥–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
  static toastLogoutSuccess() {
    this.showToast({
      title: "üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è",
      description: "–í–∏ —É—Å–ø—ñ—à–Ω–æ –≤–∏–π—à–ª–∏ –∑ —Å–∏—Å—Ç–µ–º–∏",
      color: "default"
    }, 'authSuccess');
  }

  // Toast –¥–ª—è –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
  static toastAuthError(message: string) {
    this.showToast({
      title: "‚ùå –ü–æ–º–∏–ª–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó",
      description: message,
      color: "danger"
    }, 'authErrors');
  }

  // Toast –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
  static toastTokenRefreshed(email: string) {
    this.showToast({
      title: "üîÑ –°–µ—Å—ñ—è –æ–Ω–æ–≤–ª–µ–Ω–∞",
      description: `–¢–æ–∫–µ–Ω–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è ${email}`,
      color: "success"
    }, 'tokenRefresh');
  }

  // Toast –¥–ª—è –æ—à–∏–±–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
  static toastRefreshError() {
    this.showToast({
      title: "‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è —Å–µ—Å—ñ—ó",
      description: "–ù–µ –≤–¥–∞–ª–æ—Å—è –æ–Ω–æ–≤–∏—Ç–∏ —Ç–æ–∫–µ–Ω–∏. –£–≤—ñ–π–¥—ñ—Ç—å –∑–Ω–æ–≤—É.",
      color: "danger"
    }, 'authErrors');
  }

  // Toast –¥–ª—è –∏—Å—Ç–µ—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤
  static toastTokenExpired() {
    this.showToast({
      title: "‚è∞ –°–µ—Å—ñ—è –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—è",
      description: "–í–∞—à–∞ —Å–µ—Å—ñ—è –∑–∞–∫—ñ–Ω—á–∏–ª–∞—Å—è. –í–∏–∫–æ–Ω—É—î—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è...",
      color: "warning"
    }, 'tokenExpiry');
  }

  // Toast –¥–ª—è –æ—à–∏–±–æ–∫ API
  static toastApiError(message: string) {
    this.showToast({
      title: "‚ùå –ü–æ–º–∏–ª–∫–∞ API",
      description: message,
      color: "danger"
    }, 'apiErrors');
  }

  // Toast –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  static toastEquipmentStatus(title: string, description: string, isError = false) {
    this.showToast({
      title,
      description,
      color: isError ? "danger" : "success"
    }, 'equipmentStatus');
  }

  // Toast –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  static toastSystemNotification(title: string, description: string, color: 'success' | 'danger' | 'warning' | 'default' = 'default') {
    this.showToast({
      title,
      description,
      color
    }, 'systemNotifications');
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
  static isReady(): boolean {
    return this.isInitialized;
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥—É–ª—è
if (typeof window !== 'undefined') {
  LoggingService.initialize();
}
