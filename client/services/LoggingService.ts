// –¶–µ–Ω—Ç—Ä–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Å–µ—Ä–≤—ñ—Å —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è–º
import { LoggingSettingsTypes } from '../types/logging';

// –ì–ª–æ–±–∞–ª—å–Ω–∞ –∑–º—ñ–Ω–Ω–∞ –¥–ª—è –≤—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —á–∞—Å—É —Å—Ç–∞—Ä—Ç—É –ø—Ä–æ–≥—Ä–∞–º–∏
const appStartTime = Date.now();

// –î–µ—Ñ–æ–ª—Ç–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
const defaultSettings: LoggingSettingsTypes = {
  authContextLogs: true,
  apiCallLogs: false,
  routingLogs: false,
  equipmentLogs: true,
  debugLogs: false,
  performanceLogs: false,
  loggingSettingsLogs: false,
  orderAssemblyLogs: false,
  cookieLogs: false,
  warehouseMovementLogs: false,
  productSetsLogs: false
};

export class LoggingService {
  private static settings: LoggingSettingsTypes = defaultSettings;
  private static isInitialized = false;

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∏–∑ –ë–î
  static async initialize() {
    try {
      const response = await fetch('/api/settings/logging', {
        credentials: 'include'
      });
      if (response.ok) {
        const settings = await response.json();
        this.settings = { ...defaultSettings, ...settings };
        // console.log('üìã [LoggingService] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ –ë–î —á–µ—Ä–µ–∑ API', this.settings);
      } else {
        console.log('üìã [LoggingService] –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º');
      }
    } catch (error) {
      console.warn('üìã [LoggingService] –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ª–æ–≥—É–≤–∞–Ω–Ω—è, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—ñ:', error);
    } finally {
      this.isInitialized = true;
    }
  }

  // –û–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ª–æ–∫–∞–ª—å–Ω–æ
  static updateSettings(settings: LoggingSettingsTypes) {
  this.settings = settings;
  console.log('üìã [LoggingService] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –æ–Ω–æ–≤–ª–µ–Ω–æ –ª–æ–∫–∞–ª—å–Ω–æ');
  console.log('üìã [LoggingService] authContextLogs:', this.settings.authContextLogs ? '–≤–∫–ª—é—á–µ–Ω—ñ' : '–≤–∏–º–∫–Ω–µ–Ω—ñ');
  }

  // –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
  static async saveSettings(settings: LoggingSettingsTypes): Promise<boolean> {
    try {
      const response = await fetch('/api/settings/logging', {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json'
        },
        credentials: 'include',
        body: JSON.stringify(settings)
      });

      if (response.ok) {
        this.settings = settings;
        console.log('‚úÖ [LoggingService] –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:', this.settings);
        return true;
      } else {
        let errorData;
        try {
          errorData = await response.json();
        } catch (parseError) {
          errorData = { error: `HTTP ${response.status}: ${response.statusText}` };
        }
        console.error('‚ùå [LoggingService] –ü–æ–º–∏–ª–∫–∞ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ª–æ–≥—É–≤–∞–Ω–Ω—è:', errorData);
        console.error('‚ùå [LoggingService] –°—Ç–∞—Ç—É—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', response.status);
        console.error('‚ùå [LoggingService] –ó–∞–≥–æ–ª–æ–≤–∫–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ:', Object.fromEntries(response.headers));
        return false;
      }
    } catch (error) {
      console.error('‚ùå [LoggingService] –ú–µ—Ä–µ–∂–µ–≤–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ª–æ–≥—É–≤–∞–Ω–Ω—è:', error);
      return false;
    }
  }

  // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∏–π —Å–µ—Ä–≤—ñ—Å
  static isServiceInitialized(): boolean {
    return this.isInitialized;
  }

  // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ—Ç–æ—á–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å
  static getSettings(): LoggingSettingsTypes {
    // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –≤—Å—ñ –ø–æ–ª—è —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω—ñ –∫–æ—Ä–µ–∫—Ç–Ω–æ
    return {
      ...defaultSettings,
      ...this.settings
    };
  }

  // –§–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É –¥–ª—è –ª–æ–≥—ñ–≤
  private static formatTimeOnly(timestamp: string): string {
    return new Date(timestamp).toLocaleTimeString('uk-UA', {
      hour12: false,
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    });
  }

  // –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –∫–æ–Ω—Å–æ–ª—å–Ω–æ–≥–æ –ª–æ–≥—É–≤–∞–Ω–Ω—è
  static log(message: string, data?: any, category: keyof LoggingSettingsTypes = 'debugLogs', force: boolean = false) {
    // –Ø–∫—â–æ –Ω–µ force —ñ –ª–æ–≥—É–≤–∞–Ω–Ω—è –≤–∏–º–∫–Ω–µ–Ω–æ - –Ω–µ –≤–∏–≤–æ–¥–∏–º–æ
    if (!force && !this.settings[category]) {
      return;
    }

    const timestamp = new Date().toISOString();
    const timeFromStart = (Date.now() - appStartTime) / 1000;
    console.log(
      `\n‚ïê‚ïê‚ïê‚ïê [${this.formatTimeOnly(timestamp)}] ‚ïê‚ïê‚ïê‚ïê [${timeFromStart.toFixed(2)}s] ‚ïê‚ïê‚ïê‚ïê\n${message}`,
      ...(data !== undefined ? [data, '\n\n'] : ['\n\n'])
    );
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è AuthContext
  static authLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'authContextLogs', force);
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è API –∑–∞–ø–∏—Ç—ñ–≤
  static apiLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'apiCallLogs', force);
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü—ñ—ó
  static routeLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'routingLogs', force);
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –æ–±–ª–∞–¥–Ω–∞–Ω–Ω—è
  static equipmentLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'equipmentLogs', force);
  }
  
  // –ù–∞–ª–∞–≥–æ–¥–∂—É–≤–∞–ª—å–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è
  static debugLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'debugLogs', force);
  }
  
  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
  static perfLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'performanceLogs', force);
  }
  
  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –ª–æ–≥—É–≤–∞–Ω–Ω—è
  static loggingSettingsLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'loggingSettingsLogs', force);
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω—å
  static orderAssemblyLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'orderAssemblyLogs', force);
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ –∑ cookies
  static cookieLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'cookieLogs', force);
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è —Å–∫–ª–∞–¥—Å—å–∫–∏—Ö –ø–µ—Ä–µ–º—ñ—â–µ–Ω—å
  static warehouseMovementLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'warehouseMovementLogs', force);
  }

  // –õ–æ–≥—É–≤–∞–Ω–Ω—è –Ω–∞–±–æ—Ä—ñ–≤ —Ç–æ–≤–∞—Ä—ñ–≤
  static productSetsLog(message: string, data?: any, force: boolean = false) {
    this.log(message, data, 'productSetsLogs', force);
  }


  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó
  static isReady(): boolean {
    return this.isInitialized;
  }
}

// –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Å–µ—Ä–≤—ñ—Å –ø—ñ–¥ —á–∞—Å –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –º–æ–¥—É–ª—è
if (typeof window !== 'undefined') {
  LoggingService.initialize();
}
