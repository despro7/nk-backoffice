import { Check, X } from 'lucide-react';
import { cn } from '../lib/utils';
import { useRoleAccess } from '@/hooks/useRoleAccess';

interface OrderItem {
  id: string;
  name: string;
  quantity: number;
  expectedWeight: number;
  status: 'default' | 'pending' | 'success' | 'error' | 'done' | 'awaiting_confirmation' | 'confirmed';
  type: 'box' | 'product';
  boxSettings?: any;
  boxCount?: number;
  boxIndex?: number;
  manualOrder?: number;
}

interface OrderChecklistItemProps {
  item: OrderItem;
  isActive: boolean;
  isBoxConfirmed: boolean;
  onClick: () => void;
}

const OrderChecklistItem = ({ item, isActive, isBoxConfirmed, onClick }: OrderChecklistItemProps) => {
  const { name, quantity, status, expectedWeight, type, boxSettings } = item;

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
  if (!name || !status || expectedWeight === undefined) {
    console.warn('OrderChecklistItem: –ù–µ–≤–∞–ª–∏–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —ç–ª–µ–º–µ–Ω—Ç–∞:', item);
    return null;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Ä—Ü–∏–π
  // const formatQuantity = (qty: number) => {
  //   if (qty === 1) return '1 –ø–æ—Ä—Ü—ñ—è';
  //   if (qty < 5) return `${qty} –ø–æ—Ä—Ü—ñ—ó`;
  //   return `${qty} –ø–æ—Ä—Ü—ñ–π`;
  // };

  const { isAdmin } = useRoleAccess();

  const isDone = status === 'done';
  const isItemBoxConfirmed = type === 'box' && status === 'confirmed';
  const isBoxDone = type === 'box' && status === 'done';

  const itemStateClasses = cn(
    'p-4 rounded-sm flex items-center justify-between outline-2 outline-transparent transition-background transition-colors duration-300 animate-duration-[100ms]',
    {
      'bg-gray-50 text-neutral-900 cursor-pointer outline-1 outline-neutral-200': status === 'default',
      'bg-warning-400 outline-2 outline-warning-500 cursor-pointer': status === 'pending' || status === 'awaiting_confirmation',
      'bg-success-500 text-white animate-pulse animate-thrice cursor-pointer': status === 'success',
      'bg-danger text-white cursor-pointer': status === 'error',
      'bg-gray-200 text-gray-500': status === 'done' || status === 'confirmed',
      // 'cursor-not-allowed opacity-75': isBoxDone,
    }
  );

  // –ö–æ—Ä–æ–±–∫–∏ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–∂–∏–¥–∞—é—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
  // –¢–æ–≤–∞—Ä—ã –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∫–æ—Ä–æ–±–∫–∞ —É–∂–µ –≤–∑–≤–µ—à–µ–Ω–∞
  // const isClickable = !isDone && !isItemBoxConfirmed && !isBoxDone && (type === 'box' ? status === 'awaiting_confirmation' : isBoxConfirmed && status === 'default');
  const isClickable = isBoxConfirmed && type === 'product' && status === 'default';

  // console.log('üîÑ [OrderChecklistItem] item:', item);

  return (
    <div className={itemStateClasses} onClick={isClickable ? onClick : undefined}>
      <div className="flex items-center gap-4">
        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ */}
        <div className={cn("w-6 h-6 rounded-sm flex items-center justify-center bg-transparent transition-colors duration-300", {
          "bg-gray-400": isDone || status === 'confirmed',
          "border-2 border-gray-400": !isDone && status !== 'success' && status !== 'awaiting_confirmation' && status !== 'confirmed',
          "border-2 border-warning-600": status === 'pending' || status === 'awaiting_confirmation',
          "bg-success-600": status === 'success',
          "border-danger-foreground": status === 'error',
        })}>
          {(isDone || status === 'success') && <Check size={18} className="text-white" />}
        </div>
        <div className="flex items-center gap-2">
          <span className={cn({
            "font-semibold": type === 'box',
            "font-normal": type === 'product'
          })}>
            {name} {type !== 'box' && (<span>√ó <span className="text-[18px] font-mono rounded-sm bg-gray-950/5 px-2.5 py-1">{quantity}</span></span>)}
          </span>
          {item.manualOrder && isAdmin() && (<span className="text-[13px] text-neutral-300 tabular-nums">#{item.manualOrder}</span>)}
          {type === 'box' && boxSettings && (
            <span className="text-[13px] tabular-nums bg-gray-950/5 px-2 py-1 rounded">
              {boxSettings.width}√ó{boxSettings.height}√ó{boxSettings.length} —Å–º
            </span>
          )}
        </div>
      </div>
      
      <div className="flex items-center gap-4">
        {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –ø–æ–º–∏–ª–∫–∏ */}
        {status === 'error' && <X size={24} />}
        
        {/* –õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ—Ä—Ü—ñ–π */}
        <span className="text-[13px] tabular-nums">
          ~{expectedWeight.toFixed(3)} –∫–≥
          {/* {type === 'box' ? `–í–∞–≥–∞ –∫–æ—Ä–æ–±–∫–∏: ${expectedWeight.toFixed(3)} –∫–≥` : `~${expectedWeight.toFixed(3)} –∫–≥`} */}
        </span>
          {/* {type !== 'box' && (
            <span className="font-medium">
              {formatQuantity(quantity)}
            </span>
          )} */}
      </div>
    </div>
  );
};

export default OrderChecklistItem;
