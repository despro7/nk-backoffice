// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function fixAuthSettings() {
  try {
    console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...\n');
    
    // –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è race condition
    const recommendations = [
      {
        key: 'access_token_expires_in',
        value: '1h', // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å 5m –¥–æ 1h
        description: '–í—Ä–µ–º—è –∂–∏–∑–Ω–∏ access —Ç–æ–∫–µ–Ω–∞',
        reason: '5 –º–∏–Ω—É—Ç —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ - –≤—ã–∑—ã–≤–∞–µ—Ç —á–∞—Å—Ç—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
      },
      {
        key: 'middleware_refresh_threshold_seconds', 
        value: '300', // 5 –º–∏–Ω—É—Ç –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è
        description: '–ü–æ—Ä–æ–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤ middleware –≤ —Å–µ–∫—É–Ω–¥–∞—Ö',
        reason: '–ü—Ä–∏ 1h —Ç–æ–∫–µ–Ω–µ, middleware –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è'
      },
      {
        key: 'client_refresh_threshold_minutes',
        value: '10', // 10 –º–∏–Ω—É—Ç –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è  
        description: '–ü–æ—Ä–æ–≥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞ –≤ –∫–ª–∏–µ–Ω—Ç–µ –≤ –º–∏–Ω—É—Ç–∞—Ö',
        reason: 'Client –æ—Ç–∫–ª—é—á–µ–Ω, –Ω–æ –µ—Å–ª–∏ –≤–∫–ª—é—á–∏—Ç—å - –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å –∑–∞ 10 –º–∏–Ω—É—Ç'
      },
      {
        key: 'middleware_auto_refresh_enabled',
        value: 'true',
        description: '–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ middleware',
        reason: '–û—Å—Ç–∞–≤–ª—è–µ–º –≤–∫–ª—é—á–µ–Ω–Ω—ã–º - middleware –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è'
      },
      {
        key: 'client_auto_refresh_enabled', 
        value: 'false', // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ
        description: '–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ –∫–ª–∏–µ–Ω—Ç–µ',
        reason: '–û–¢–ö–õ–Æ–ß–ê–ï–ú –¥–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è race condition —Å middleware'
      }
    ];

    console.log('üìã –ü—Ä–∏–º–µ–Ω—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:\n');

    for (const rec of recommendations) {
      // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
      const current = await prisma.authSettings.findUnique({
        where: { key: rec.key }
      });

      console.log(`üîß ${rec.key}:`);
      console.log(`   –¢–µ–∫—É—â–µ–µ: ${current?.value || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}`);
      console.log(`   –ù–æ–≤–æ–µ: ${rec.value}`);
      console.log(`   –ü—Ä–∏—á–∏–Ω–∞: ${rec.reason}`);

      // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É
      await prisma.authSettings.upsert({
        where: { key: rec.key },
        update: { 
          value: rec.value,
          description: rec.description,
          updatedAt: new Date()
        },
        create: {
          key: rec.key,
          value: rec.value,
          description: rec.description
        }
      });

      console.log(`   ‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ\n`);
    }

    console.log('üéØ –ò–¢–û–ì–û–í–ê–Ø –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:');
    console.log('==========================');
    console.log('‚Ä¢ Access token: 1 —á–∞—Å (3600 —Å–µ–∫—É–Ω–¥)');
    console.log('‚Ä¢ Middleware –æ–±–Ω–æ–≤–ª—è–µ—Ç: –∑–∞ 5 –º–∏–Ω—É—Ç –¥–æ –∏—Å—Ç–µ—á–µ–Ω–∏—è (–Ω–∞ 55-–π –º–∏–Ω—É—Ç–µ)');
    console.log('‚Ä¢ Client –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: –û–¢–ö–õ–Æ–ß–ï–ù–û (–∏–∑–±–µ–≥–∞–µ–º race condition)');
    console.log('‚Ä¢ Refresh token: 30 –¥–Ω–µ–π');
    console.log('\n‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É—Å–ø–µ—à–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω—ã!');
    console.log('\nüìù –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:');
    console.log('1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä');
    console.log('2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–π—Ç–∏ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö —Ç–æ–∫–µ–Ω–æ–≤ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º –∂–∏–∑–Ω–∏');

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error);
  } finally {
    await prisma.$disconnect();
  }
}

fixAuthSettings();
