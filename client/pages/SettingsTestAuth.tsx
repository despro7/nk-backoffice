import React, { useState, useEffect } from 'react';
import { useAuth } from '../contexts/AuthContext';

const SettingsTestAuth: React.FC = () => {
  const { user, logout } = useAuth();
  const [tokenInfo, setTokenInfo] = useState<any>(null);
  const [currentTime, setCurrentTime] = useState(new Date());

  // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∫–∞–∂–¥—É—é —Å–µ–∫—É–Ω–¥—É
  useEffect(() => {
    const interval = setInterval(() => {
      setCurrentTime(new Date());
    }, 1000);

    return () => clearInterval(interval);
  }, []);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–∫–µ–Ω–µ
  const checkTokenInfo = async () => {
    try {
      const response = await fetch('/api/auth/profile', {
        credentials: 'include'
      });
      
      if (response.ok) {
        const userData = await response.json();
        setTokenInfo({
          status: 'valid',
          user: userData,
          timestamp: new Date().toISOString()
        });
      } else {
        setTokenInfo({
          status: 'invalid',
          error: response.status,
          timestamp: new Date().toISOString()
        });
      }
    } catch (error) {
      setTokenInfo({
        status: 'error',
        error: error,
        timestamp: new Date().toISOString()
      });
    }
  };

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º refresh —Ç–æ–∫–µ–Ω–∞
  const testRefreshToken = async () => {
    try {
      const response = await fetch('/api/auth/refresh', {
        method: 'POST',
        credentials: 'include'
      });
      
      if (response.ok) {
        const data = await response.json();
        alert(`‚úÖ –¢–æ–∫–µ–Ω –æ–±–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ!\nExpiresIn: ${data.expiresIn} —Å–µ–∫—É–Ω–¥`);
        checkTokenInfo(); // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      } else {
        const error = await response.json();
        alert(`‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: ${error.message}`);
      }
    } catch (error) {
      alert(`‚ùå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞: ${error}`);
    }
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º cookies
  const checkCookies = () => {
    const cookies = document.cookie.split(';').reduce((acc, cookie) => {
      const [key, value] = cookie.trim().split('=');
      if (key && value) {
        acc[key] = value;
      }
      return acc;
    }, {} as Record<string, string>);

    console.log('üç™ –í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ cookies:', cookies);
    console.log('üç™ –°—ã—Ä—ã–µ cookies:', document.cookie);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º localStorage
    console.log('üíæ localStorage:', localStorage);
    const localStorageTokens = Object.keys(localStorage).filter(key => 
      key.toLowerCase().includes('token') || 
      key.toLowerCase().includes('auth') || 
      key.toLowerCase().includes('jwt')
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º sessionStorage
    console.log('üì± sessionStorage:', sessionStorage);
    const sessionStorageTokens = Object.keys(sessionStorage).filter(key => 
      key.toLowerCase().includes('token') || 
      key.toLowerCase().includes('auth') || 
      key.toLowerCase().includes('jwt')
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–º–µ–Ω –∫—É–∫–∏
    const possibleNames = [
      'accessToken', 'access_token', 'access-token',
      'refreshToken', 'refresh_token', 'refresh-token',
      'token', 'auth_token', 'jwt'
    ];
    
    const foundTokens = possibleNames.filter(name => cookies[name]);
    
    let resultMessage = '';
    
    if (foundTokens.length > 0) {
      resultMessage += `‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –≤ cookies:\n${foundTokens.map(name => `${name}: ${cookies[name]?.substring(0, 20)}...`).join('\n')}\n\n`;
    }
    
    if (localStorageTokens.length > 0) {
      resultMessage += `‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –≤ localStorage:\n${localStorageTokens.map(name => `${name}: ${localStorage.getItem(name)?.substring(0, 20)}...`).join('\n')}\n\n`;
    }
    
    if (sessionStorageTokens.length > 0) {
      resultMessage += `‚úÖ –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã –≤ sessionStorage:\n${sessionStorageTokens.map(name => `${name}: ${sessionStorage.getItem(name)?.substring(0, 20)}...`).join('\n')}\n\n`;
    }
    
    if (foundTokens.length === 0 && localStorageTokens.length === 0 && sessionStorageTokens.length === 0) {
      resultMessage = `üîí –¢–æ–∫–µ–Ω—ã –ù–ï –Ω–∞–π–¥–µ–Ω—ã –≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è JavaScript –º–µ—Å—Ç–∞—Ö —Ö—Ä–∞–Ω–µ–Ω–∏—è.\n\n` +
        `üìù –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:\n` +
        `‚Ä¢ –í–∞—à–∏ —Ç–æ–∫–µ–Ω—ã —Ä–∞–±–æ—Ç–∞—é—Ç —á–µ—Ä–µ–∑ HTTP-only cookies (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)\n` +
        `‚Ä¢ HTTP-only cookies –ù–ï –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è JavaScript (–∑–∞—â–∏—Ç–∞ –æ—Ç XSS)\n` +
        `‚Ä¢ –¢–æ–∫–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è —Å –∫–∞–∂–¥—ã–º –∑–∞–ø—Ä–æ—Å–æ–º\n` +
        `‚Ä¢ –≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ!\n\n` +
        `üç™ –î–æ—Å—Ç—É–ø–Ω—ã–µ cookies:\n${Object.keys(cookies).length > 0 ? Object.keys(cookies).join(', ') : '–ù–µ—Ç cookies'}\n\n` +
        `üì° –°—ã—Ä—ã–µ cookies:\n${document.cookie || '–ü—É—Å—Ç–æ'}`;
    }
    
    console.log('üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Ç–æ–∫–µ–Ω–æ–≤:', resultMessage);
    alert(resultMessage);
  };

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤
  const checkTokenSettings = () => {
    const localDelay = localStorage.getItem('tokenRefreshDelay');
    const envDelay = import.meta.env.VITE_TOKEN_REFRESH_DELAY;
    
    let resultMessage = `üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤:\n\n`;
    
    if (localDelay) {
      resultMessage += `üíæ localStorage: ${localDelay} –º–∏–Ω—É—Ç\n`;
    } else {
      resultMessage += `üíæ localStorage: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ\n`;
    }
    
    if (envDelay) {
      resultMessage += `üåç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: ${envDelay} –º–∏–Ω—É—Ç\n`;
    } else {
      resultMessage += `üåç –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ\n`;
    }
    
    resultMessage += `\n‚öôÔ∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ${localDelay || envDelay || '55'} –º–∏–Ω—É—Ç (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)\n\n`;
    resultMessage += `üí° –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n`;
    resultMessage += `localStorage.setItem('tokenRefreshDelay', '30'); // 30 –º–∏–Ω—É—Ç\n`;
    resultMessage += `localStorage.setItem('tokenRefreshDelay', '120'); // 2 —á–∞—Å–∞`;
    
    console.log('üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤:', { localDelay, envDelay, default: 55 });
    alert(resultMessage);
  };

  if (!user) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-50">
        <div className="text-center">
          <h1 className="text-2xl font-bold text-gray-900 mb-4">–¢–µ—Å—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h1>
          <p className="text-gray-600 mb-4">–í—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã</p>
          <a href="/auth" className="text-blue-600 hover:text-blue-800">–í–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É</a>
        </div>
      </div>
    );
  }

  return (
    <div className="max-w-4xl">
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h1 className="text-2xl font-bold text-gray-900 mb-4">üîê –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</h1>
          
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
          <div className="bg-blue-50 p-4 rounded-lg">
            <h2 className="text-lg font-semibold text-blue-900 mb-3">üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ</h2>
            <div className="space-y-2 text-sm">
              <p><strong>ID:</strong> {user.id}</p>
              <p><strong>Email:</strong> {user.email}</p>
              <p><strong>–ò–º—è:</strong> {user.name}</p>
              <p><strong>–†–æ–ª—å:</strong> {user.roleName}</p>
              <p><strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π –≤—Ö–æ–¥:</strong> {user.lastLoginAt ? new Date(user.lastLoginAt).toLocaleString() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
              <p><strong>–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:</strong> {user.lastActivityAt ? new Date(user.lastActivityAt).toLocaleString() : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</p>
            </div>
          </div>

          {/* –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è */}
          <div className="bg-green-50 p-4 rounded-lg">
            <h2 className="text-lg font-semibold text-green-900 mb-3">‚è∞ –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è</h2>
            <div className="space-y-2 text-sm">
              <p><strong>–õ–æ–∫–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è:</strong> {currentTime.toLocaleString()}</p>
              <p><strong>UTC –≤—Ä–µ–º—è:</strong> {currentTime.toISOString()}</p>
              <p><strong>Timestamp:</strong> {currentTime.getTime()}</p>
            </div>
          </div>
        </div>
      </div>

      {/* –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤ */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h2 className="text-xl font-bold text-gray-900 mb-4">üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤</h2>
          
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4">
          <button
            onClick={checkTokenInfo}
            className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors"
          >
            üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω
          </button>
            
          <button
            onClick={testRefreshToken}
            className="bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700 transition-colors"
          >
            üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω
          </button>
            
          <button
            onClick={checkCookies}
            className="bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 transition-colors"
          >
            üç™ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å cookies
          </button>
          
          <button
            onClick={checkTokenSettings}
            className="bg-orange-600 text-white px-4 py-2 rounded hover:bg-orange-700 transition-colors"
          >
            ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤
          </button>
        </div>

        {/* –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
        {tokenInfo && (
          <div className={`p-4 rounded-lg ${
            tokenInfo.status === 'valid' ? 'bg-green-50 border border-green-200' :
            tokenInfo.status === 'invalid' ? 'bg-red-50 border border-red-200' :
            'bg-yellow-50 border border-yellow-200'
          }`}>
            <h3 className="font-semibold mb-2">
              {tokenInfo.status === 'valid' ? '‚úÖ –¢–æ–∫–µ–Ω –≤–∞–ª–∏–¥–µ–Ω' :
               tokenInfo.status === 'invalid' ? '‚ùå –¢–æ–∫–µ–Ω –Ω–µ–≤–∞–ª–∏–¥–µ–Ω' :
               '‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏'}
            </h3>
            <pre className="text-sm overflow-auto">
              {JSON.stringify(tokenInfo, null, 2)}
            </pre>
          </div>
        )}
      </div>

      {/* –õ–æ–≥–∏ –∫–æ–Ω—Å–æ–ª–∏ */}
      <div className="bg-white rounded-lg shadow-md p-6 mb-6">
        <h2 className="text-xl font-bold text-gray-900 mb-4">üìã –õ–æ–≥–∏ –∫–æ–Ω—Å–æ–ª–∏</h2>
        <div className="bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-sm h-64 overflow-auto">
          <p>üîê –û—Ç–∫—Ä–æ–π—Ç–µ DevTools ‚Üí Console –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</p>
          <p>üì° –í—Å–µ –∑–∞–ø—Ä–æ—Å—ã –∫ API –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –º–µ—Ç–∫–∞–º–∏</p>
          <p>‚è∞ –¢–∞–π–º–µ—Ä—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç —Ç–æ—á–Ω–æ–µ –≤—Ä–µ–º—è</p>
          <p>‚ö†Ô∏è –û—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –¥–µ—Ç–∞–ª—å–Ω–æ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è</p>
        </div>
      </div>

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
      <div className="bg-white rounded-lg shadow-md p-6">
        <h2 className="text-xl font-bold text-gray-900 mb-4">üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</h2>
          
        <div className="space-y-4 text-sm">
          <div className="bg-blue-50 p-3 rounded">
            <h3 className="font-semibold text-blue-900">1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ–∫–µ–Ω–∞</h3>
            <p>–ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–æ–∫–µ–Ω" –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</p>
          </div>
            
          <div className="bg-green-50 p-3 rounded">
            <h3 className="font-semibold text-green-900">2. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞</h3>
            <p>–ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å —Ç–æ–∫–µ–Ω" –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è access token</p>
          </div>
            
          <div className="bg-purple-50 p-3 rounded">
            <h3 className="font-semibold text-purple-900">3. –ü—Ä–æ–≤–µ—Ä–∫–∞ cookies</h3>
            <p>–ù–∞–∂–º–∏—Ç–µ "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å cookies" –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —Ç–æ–∫–µ–Ω–æ–≤ –≤ –±—Ä–∞—É–∑–µ—Ä–µ</p>
          </div>
            
          <div className="bg-yellow-50 p-3 rounded">
            <h3 className="font-semibold text-yellow-900">4. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ª–æ–≥–æ–≤</h3>
            <p>–û—Ç–∫—Ä–æ–π—Ç–µ DevTools ‚Üí Console –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω—ã—Ö –ª–æ–≥–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏</p>
          </div>
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ */}
      <div className="text-center mt-6">
        <button
          onClick={logout}
          className="bg-red-600 text-white px-6 py-2 rounded hover:bg-red-700 transition-colors"
        >
          üö™ –í—ã–π—Ç–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã
        </button>
      </div>
    </div>
  );
};

export default SettingsTestAuth;
