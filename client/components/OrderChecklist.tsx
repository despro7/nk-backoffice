import { useState, useMemo, useEffect, useCallback, useRef } from 'react';
import { playSoundChoice } from '../lib/soundUtils';
import { Button } from '@heroui/button';
import OrderChecklistItem from './OrderChecklistItem';
import { Progress } from './ui/progress';
import { DynamicIcon } from 'lucide-react/dynamic';
import { useEquipmentFromAuth } from '../contexts/AuthContext';
import { useDebug } from '../contexts/DebugContext';


// –£–±–∏—Ä–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é handlePrintTTN - –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ç–æ–ª—å–∫–æ –≤ OrderView
// –£–±–∏—Ä–∞–µ–º –≤—Å–µ –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ –∏–º–ø–æ—Ä—Ç—ã

// –§—É–Ω–∫—Ü–∏—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ manualOrder -> type -> name
const sortChecklistItems = <T extends { manualOrder?: number; type: string; name: string }>(items: T[]): T[] => {
  return [...items].sort((a, b) => {
    // –°–ø–æ—á–∞—Ç–∫—É —Å–æ—Ä—Ç—É—î–º–æ –ø–æ manualOrder, –ø–æ—Ç—ñ–º –ø–æ —Ç–∏–ø—É, –ø–æ—Ç—ñ–º –ø–æ —ñ–º–µ–Ω—ñ
    const aManualOrder = a.manualOrder ?? 999;
    const bManualOrder = b.manualOrder ?? 999;
    
    if (aManualOrder !== bManualOrder) {
      return aManualOrder - bManualOrder;
    }
    
    // –Ø–∫—â–æ manualOrder –æ–¥–Ω–∞–∫–æ–≤–∏–π, —Å–ø–æ—á–∞—Ç–∫—É –∫–æ—Ä–æ–±–∫–∏, –ø–æ—Ç—ñ–º —Ç–æ–≤–∞—Ä–∏
    if (a.type !== b.type) {
      return a.type === 'box' ? -1 : 1;
    }
    
    // –î–ª—è –æ–¥–Ω–∞–∫–æ–≤–æ–≥–æ —Ç–∏–ø—É —Å–æ—Ä—Ç—É—î–º–æ –ø–æ —ñ–º–µ–Ω—ñ
    return a.name.localeCompare(b.name);
  });
};

interface OrderItem {
  id: string;
  name: string;
  quantity: number;
  expectedWeight: number;
  status: 'default' | 'pending' | 'success' | 'error' | 'done' | 'awaiting_confirmation' | 'confirmed';
  type: 'box' | 'product';
  boxSettings?: any;
  boxCount?: number;
  boxIndex?: number; // –ò–Ω–¥–µ–∫—Å –∫–æ—Ä–æ–±–∫–∏ (0, 1, 2...)
  portionsRange?: { start: number; end: number }; // –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ—Ä—Ü–∏–π –¥–ª—è –∫–æ—Ä–æ–±–∫–∏
  portionsPerBox?: number; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π –Ω–∞ –∫–æ—Ä–æ–±–∫—É
  manualOrder?: number; // –†—É—á–Ω–µ —Å–æ—Ä—Ç—É–≤–∞–Ω–Ω—è
}

interface OrderChecklistProps {
  items: OrderItem[];
  totalPortions: number;
  activeBoxIndex: number;
  onActiveBoxChange?: (activeBoxIndex: number) => void;
  onItemStatusChange?: (itemId: string, status: OrderItem['status']) => void;
  onPrintTTN?: () => void; // Callback –¥–ª—è –ø–µ—á–∞—Ç–∏ –¢–¢–ù
  showPrintTTN?: boolean;
  onNextOrder?: () => void; // Callback –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–∫–∞–∑—É
  showNextOrder?: boolean;
  nextOrderNumber?: string; // –ù–æ–º–µ—Ä –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  nextOrderDate?: string; // –î–∞—Ç–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
  showNoMoreOrders?: boolean; // –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å
  isDebugMode?: boolean; // –§–ª–∞–≥ –¥–µ–±–∞–≥-—Ä–µ–∂–∏–º–∞
}

const OrderChecklist = ({ items, totalPortions, activeBoxIndex, onActiveBoxChange, onItemStatusChange, onPrintTTN, showPrintTTN, onNextOrder, showNextOrder, nextOrderNumber, nextOrderDate, showNoMoreOrders }: OrderChecklistProps) => {
  const [activeItemId, setActiveItemId] = useState<string | null>(null);
  const [equipmentState] = useEquipmentFromAuth(); // <-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è
  const [soundSettings, setSoundSettings] = useState<Record<string, string>>({});
  const { isDebugMode } = useDebug(); // <-- –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–µ–±–∞–≥–∞

  // –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–≤—É–∫—É
  useEffect(() => {
    fetch('/api/settings/equipment', { credentials: 'include' })
      .then(res => res.json())
      .then(data => {
        if (data?.data?.orderSoundSettings) {
          setSoundSettings(data.data.orderSoundSettings);
        }
      })
      .catch(() => {
        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –¥–µ—Ñ–æ–ª—Ç–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ
        setSoundSettings({ done: 'macos_glass' });
      });
  }, []);


  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ items
  useEffect(() => {
    // console.log('üîÑ [OrderChecklist] –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞:', {
    //   activeBoxIndex,
    //   items: items
    //     .filter(item => (item.boxIndex || 0) === activeBoxIndex)
    //     .map(item => ({ name: item.name, type: item.type, status: item.status }))
    // });

    // –°–Ω–∞—á–∞–ª–∞ –∏—â–µ–º —ç–ª–µ–º–µ–Ω—Ç —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'pending' –≤ —Ç–µ–∫—É—â–µ–π –∫–æ—Ä–æ–±–∫–µ
    let newActiveItem = items.find((item) => 
      item.status === 'pending' && 
      (item.boxIndex || 0) === activeBoxIndex
    );

    // –ï—Å–ª–∏ –Ω–µ—Ç pending, –∏—â–µ–º –∫–æ—Ä–æ–±–∫—É —Ç–µ–∫—É—â–µ–π –∫–æ—Ä–æ–±–∫–∏, –∫–æ—Ç–æ—Ä–∞—è –æ–∂–∏–¥–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    if (!newActiveItem) {
      newActiveItem = items.find((item) =>
        item.type === 'box' &&
        (item.boxIndex || 0) === activeBoxIndex &&
        item.status === 'awaiting_confirmation'
      );
    }

    // –ï—Å–ª–∏ –∫–æ—Ä–æ–±–∫–∞ —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞, –∏—â–µ–º –ø–µ—Ä–≤—ã–π —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–æ–±–∫–µ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'default' —Å —É—á–µ—Ç–æ–º —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
    if (!newActiveItem) {
      const defaultProducts = items.filter((item) =>
        item.type === 'product' &&
        (item.boxIndex || 0) === activeBoxIndex &&
        item.status === 'default'
      );
      
      // –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –±–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
      const sortedProducts = sortChecklistItems(defaultProducts);
      newActiveItem = sortedProducts[0];
    }

    // console.log('üéØ [OrderChecklist] –í—ã–±—Ä–∞–Ω–Ω—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç:', newActiveItem?.name || '–Ω–µ—Ç');
    // console.log('üìã [OrderChecklist] –°—Ç–∞—Ç—É—Å—ã —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–æ–±–∫–µ:', 
    //   items
    //     .filter(item => (item.boxIndex || 0) === activeBoxIndex && item.type === 'product')
    //     .map(item => ({ name: item.name, status: item.status }))
    // );

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–π–¥–µ–Ω –∏ –≤–∞–ª–∏–¥–µ–Ω
    if (newActiveItem && newActiveItem.id) {
      setActiveItemId(newActiveItem.id);
    } else {
      setActiveItemId(null);
    }
  }, [items, activeBoxIndex]);



  const packedPortions = useMemo(() => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º items –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –ø–æ–¥—Å—á–µ—Ç–∞
    const currentBoxItems = items.filter(item => 
      item.type === 'product' && (item.boxIndex || 0) === activeBoxIndex
    );
    
    const packed = currentBoxItems.reduce((acc, item) => {
      if (item.status === 'done') {
        return acc + item.quantity;
      }
      return acc;
    }, 0);
    
    return packed;
  }, [items, activeBoxIndex]);

  // –í—ã—á–∏—Å–ª—è–µ–º –≤–µ—Å –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏ –∏ –æ–±—â–∏–π –≤–µ—Å –∑–∞–∫–∞–∑–∞
  const weightInfo = useMemo(() => {
    // –í–µ—Å –∞–∫—Ç–∏–≤–Ω–æ–π –∫–æ—Ä–æ–±–∫–∏
    const currentBoxItems = items.filter(item =>
      (item.boxIndex || 0) === activeBoxIndex
    );

    const currentBoxWeight = currentBoxItems.reduce((acc, item) => {
      const itemTotalWeight = item.expectedWeight;
      return acc + itemTotalWeight;
    }, 0);

    // –¢–µ–∫—É—â–∏–π –≤–µ—Å –Ω–∞ –≤–µ—Å–∞—Ö (–≤–µ—Å –∫–æ—Ä–æ–±–∫–∏ + –≤–µ—Å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤)
    const currentScaleWeight = currentBoxItems.reduce((acc, item) => {
      if (item.type === 'box' || item.status === 'done') {
        return acc + item.expectedWeight;
      }
      return acc;
    }, 0);

    // –û–±—â–∏–π –≤–µ—Å –≤—Å–µ–≥–æ –∑–∞–∫–∞–∑–∞ (—Ç–æ–≤–∞—Ä—ã + –∫–æ—Ä–æ–±–∫–∏)
    const allProductItems = items.filter(item => item.type === 'product');
    const allBoxItems = items.filter(item => item.type === 'box');

    const productsWeight = allProductItems.reduce((acc, item) => {
      const itemTotalWeight = item.expectedWeight;
      return acc + itemTotalWeight;
    }, 0);

    const boxesWeight = allBoxItems.reduce((acc, item) => {
      return acc + item.expectedWeight;
    }, 0);

    const totalOrderWeight = productsWeight + boxesWeight;

    return {
      currentBoxWeight,
      currentScaleWeight,
      totalOrderWeight
    };
  }, [items, activeBoxIndex]);

  // –í—ã—á–∏—Å–ª—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Ä—Ü–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–π –∫–æ—Ä–æ–±–∫–∏
  const currentBoxTotalPortions = useMemo(() => {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º items –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ —Å packedPortions
    const currentBoxItems = items.filter(item => 
      item.type === 'product' && (item.boxIndex || 0) === activeBoxIndex
    );
    
    const total = currentBoxItems.reduce((acc, item) => {
      return acc + item.quantity;
    }, 0);
    
    return total;
  }, [items, activeBoxIndex]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –ª–∏ —Ç–µ–∫—É—â–∞—è –∫–æ—Ä–æ–±–∫–∞
  const isCurrentBoxComplete = useMemo(() => {
    const currentBoxItems = items.filter(item => 
      item.type === 'product' && (item.boxIndex || 0) === activeBoxIndex
    );
    
    // –ö–æ—Ä–æ–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –µ—Å–ª–∏ –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –Ω–µ–π —Å–æ–±—Ä–∞–Ω—ã
    return currentBoxItems.length > 0 && currentBoxItems.every(item => item.status === 'done');
  }, [items, activeBoxIndex]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∑–≤–µ—à–µ–Ω–∞ –ª–∏ —Ç–µ–∫—É—â–∞—è –∫–æ—Ä–æ–±–∫–∞
  const isCurrentBoxConfirmed = useMemo(() => {
    const currentBox = items.find(item =>
      item.type === 'box' && (item.boxIndex || 0) === activeBoxIndex
    );

    // –ö–æ—Ä–æ–±–∫–∞ —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤–∑–≤–µ—à–µ–Ω–Ω–æ–π –µ—Å–ª–∏ –æ–Ω–∞ –∏–º–µ–µ—Ç —Å—Ç–∞—Ç—É—Å 'confirmed' –∏–ª–∏ 'done'
    return currentBox?.status === 'confirmed' || currentBox?.status === 'done';
  }, [items, activeBoxIndex]);

  // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–ø–∞–∫–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ—Ä—Ü–∏–π –ø–æ –≤—Å–µ–º—É –∑–∞–∫–∞–∑—É
  const totalPackedPortions = useMemo(() => {
    return items
      .filter(item => item.type === 'product' && item.status === 'done')
      .reduce((acc, item) => acc + item.quantity, 0);
  }, [items]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–≤–µ—Ä—à–µ–Ω –ª–∏ –≤–µ—Å—å –∑–∞–∫–∞–∑
  const isOrderComplete = useMemo(() => {
    const allProductItems = items.filter(item => item.type === 'product');
    return allProductItems.length > 0 && allProductItems.every(item => item.status === 'done');
  }, [items]);

  // –ü—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º –∑–≤—É–∫, –∫–æ–≥–¥–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–Ω–æ–ø–∫–∞ –ø–µ—á–∞—Ç–∏ –¢–¢–ù
  const wasPrintVisibleRef = useRef(false);
  useEffect(() => {
    const isPrintVisible = !!(showPrintTTN || isOrderComplete || isDebugMode);
    if (isPrintVisible && !wasPrintVisibleRef.current) {
      // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–≤—É–∫—É –¥–ª—è –ø–æ–¥—ñ—ó 'done'
      const doneSound = soundSettings.done || 'macos_glass';
      playSoundChoice(doneSound, 'done');
    }
    wasPrintVisibleRef.current = isPrintVisible;
  }, [showPrintTTN, isOrderComplete, isDebugMode, soundSettings.done]);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –¥—Ä—É–∫ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ —É–º–æ–≤
  const wasAutoPrintTriggeredRef = useRef(false);
  const [isAutoPrinting, setIsAutoPrinting] = useState(false);
  const [autoPrintCountdown, setAutoPrintCountdown] = useState(0);
  
  useEffect(() => {
    const shouldAutoPrint = !!(isOrderComplete || showPrintTTN || isDebugMode);
    const autoPrintEnabled = equipmentState.config?.printer?.autoPrintOnComplete;
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –¥—Ä—É–∫—É–≤–∞—Ç–∏
    if (shouldAutoPrint && autoPrintEnabled && !wasAutoPrintTriggeredRef.current && onPrintTTN) {
      console.log('üñ®Ô∏è [OrderChecklist] –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –¥—Ä—É–∫ –¢–¢–ù:', { 
        isOrderComplete, 
        showPrintTTN, 
        isDebugMode, 
        autoPrintEnabled 
      });
      
      // –û—Ç—Ä–∏–º—É—î–º–æ –∑–∞—Ç—Ä–∏–º–∫—É –∑ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º 3 —Å–µ–∫—É–Ω–¥–∏)
      const autoPrintDelay = equipmentState.config?.printer?.autoPrintDelayMs ?? 3000;
      const delaySeconds = Math.ceil(autoPrintDelay / 1000);
      
      // –ó–∞–ø—É—Å–∫–∞—î–º–æ –∞–Ω—ñ–º–∞—Ü—ñ—é –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –¥—Ä—É–∫—É
      setIsAutoPrinting(true);
      setAutoPrintCountdown(delaySeconds);
      
      // –ó–∞—Ç—Ä–∏–º–∫–∞ –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–±–∞—á–∏–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –∞–Ω—ñ–º–∞—Ü—ñ—é
      setTimeout(() => {
        onPrintTTN();
        wasAutoPrintTriggeredRef.current = true;
        setIsAutoPrinting(false);
        setAutoPrintCountdown(0);
      }, autoPrintDelay);
    }
    
    // –°–∫–∏–¥–∞—î–º–æ –ø—Ä–∞–ø–æ—Ä–µ—Ü—å –ø—Ä–∏ –∑–º—ñ–Ω—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
    if (!shouldAutoPrint) {
      wasAutoPrintTriggeredRef.current = false;
      setIsAutoPrinting(false);
      setAutoPrintCountdown(0);
    }
  }, [isOrderComplete, showPrintTTN, isDebugMode, equipmentState.config?.printer?.autoPrintOnComplete, onPrintTTN]);

  // –ê–Ω—ñ–º–∞—Ü—ñ—è –≤—ñ–¥–ª—ñ–∫—É –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –¥—Ä—É–∫—É
  useEffect(() => {
    if (autoPrintCountdown > 0) {
      const timer = setTimeout(() => {
        setAutoPrintCountdown(prev => prev - 1);
      }, 1000);
      return () => clearTimeout(timer);
    }
  }, [autoPrintCountdown]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–ª–µ–¥—É—é—â–∞—è –∫–æ—Ä–æ–±–∫–∞
  const hasNextBox = useMemo(() => {
    const totalBoxes = items.filter(item => item.type === 'box').length;
    return activeBoxIndex < totalBoxes - 1;
  }, [items, activeBoxIndex]);

  const handleItemClick = (itemId: string) => {
    const clickedItem = items.find(item => item.id === itemId);

    // –ö–æ—Ä–æ–±–∫–∏ –Ω–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã, –∫—Ä–æ–º–µ awaiting_confirmation
    // –ö–æ—Ä–æ–±–∫–∏ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'done' –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –æ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–∑–≤–µ—à–∏–≤–∞–Ω–∏—è
    if (clickedItem?.type === 'box' && clickedItem?.status !== 'awaiting_confirmation') {
      return;
    }

    // –¢–æ–≤–∞—Ä—ã –Ω–µ –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—ã, –ø–æ–∫–∞ –∫–æ—Ä–æ–±–∫–∞ –Ω–µ –≤–∑–≤–µ—à–µ–Ω–∞
    if (clickedItem?.type === 'product' && !isCurrentBoxConfirmed) {
      return;
    }

    setActiveItemId(itemId);

    // –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ callback
    if (onItemStatusChange) {
        onItemStatusChange(itemId, 'pending');
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –¥—Ä—É–≥–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ default
        // –ù–∞—Ö–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π —ç–ª–µ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ boxIndex
        const currentItem = items.find(item => item.id === itemId);
        const currentBoxIndex = currentItem?.boxIndex || 0;

        items.forEach(item => {
          if (item.id !== itemId && item.status === 'pending' && (item.boxIndex || 0) === currentBoxIndex) {
            onItemStatusChange(item.id, 'default');
          }
        });

      }
  };

  return (
    <div className="space-y-4 bg-white p-4 rounded-lg shadow">

      {/* –û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä –∑–∞–∫–∞–∑–∞ */}
      <div className="bg-success-100 p-4 rounded-sm mb-4">
        <div className="flex justify-between items-center text-success-700 text-lg font-medium">
          <div className="flex items-center gap-4">
            <span>–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–æ—Ä—Ü—ñ–π:</span>
            <span>
              {totalPackedPortions} / {totalPortions}
            </span>
          </div>
          {weightInfo.totalOrderWeight > 0 && (
            <span className="text-base tabular-nums leading-[100%] border-1 border-success-700/10 bg-success-700/5 rounded p-1">
              ~{weightInfo.totalOrderWeight.toFixed(3)} –∫–≥
            </span>
          )}
        </div>

        <Progress
          value={(totalPackedPortions / totalPortions) * 100}
          className="mt-2"
        />
      </div>

      {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä–æ–±–ª–µ–º–∞—Ö) */}
      {currentBoxTotalPortions === 0 && (
        <div className="text-xs text-orange-600 mt-1">
          ‚ö†Ô∏è –ù–µ–º–∞—î —Ç–æ–≤–∞—Ä—ñ–≤ —É –ø–æ—Ç–æ—á–Ω—ñ–π –∫–æ—Ä–æ–±—Ü—ñ
        </div>
      )}

      {/* –°–ø–∏—Å–æ–∫ –ø–æ–∑–∏—Ü—ñ–π –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Ç–∞—Ü—ñ—ó */}
      <div className="space-y-2 mb-0">
        {sortChecklistItems(
          items.filter((item) => {
            // –§—ñ–ª—å—Ç—Ä—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –∑–∞ –ø–æ—Ç–æ—á–Ω–æ—é –∫–æ—Ä–æ–±–∫–æ—é
            const boxIndex = item.boxIndex || 0;
            return boxIndex === activeBoxIndex;
          })
        ).map((item) => (
          <div key={item.id} className="relative">
            <OrderChecklistItem
              item={item}
              isActive={activeItemId === item.id}
              isBoxConfirmed={isCurrentBoxConfirmed}
              onClick={() => handleItemClick(item.id)}
            />
          </div>
        ))}
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <div className="space-y-3">
        {/* –ö–Ω–æ–ø–∫–∞ "–°–ª–µ–¥—É—é—â–∞—è –∫–æ—Ä–æ–±–∫–∞" */}
        {isCurrentBoxComplete && hasNextBox && (
          <Button
            onPress={() => onActiveBoxChange && onActiveBoxChange(activeBoxIndex + 1)}
            className="mt-6 w-full bg-blue-600 text-white p-8 rounded-md text-lg font-medium hover:bg-blue-700 shadow-sm flex items-center justify-center gap-2"
          >
            –ù–∞—Å—Ç—É–ø–Ω–∞ –∫–æ—Ä–æ–±–∫–∞ <DynamicIcon name="arrow-right" size={20} strokeWidth={1.5} />
          </Button>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ "–†–∞—Å–ø–µ—á–∞—Ç–∞—Ç—å –¢–¢–ù" */}
        {(isOrderComplete || showPrintTTN || isDebugMode) && (
          <div className="mt-6 space-y-2">
            {/* –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –¥—Ä—É–∫—É */}
            {/* {equipmentState.config?.printer?.autoPrintOnComplete && (
              <div className={`flex items-center justify-center gap-2 text-sm text-blue-600 bg-blue-50 px-3 py-2 rounded-md border border-blue-200 transition-all duration-300 ${
                isAutoPrinting ? 'animate-pulse bg-gradient-to-r from-blue-50 to-purple-50' : ''
              }`}>
                <DynamicIcon name="zap" size={16} className={`text-blue-500 ${isAutoPrinting ? 'animate-bounce' : ''}`} />
                <span className="font-medium">
                  {isAutoPrinting ? '–ü—ñ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –¥—Ä—É–∫—É...' : '–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –¥—Ä—É–∫ —É–≤—ñ–º–∫–Ω–µ–Ω–æ'}
                </span>
              </div>
            )} */}
            
            <Button
              onPress={onPrintTTN}
              disabled={false} // –£–±–∏—Ä–∞–µ–º –ª–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª–æ–±–∞–ª—å–Ω–æ–µ –∏–∑ OrderView
              className={`w-full p-8 rounded-md text-lg font-medium shadow-sm flex items-center justify-center gap-2 disabled:opacity-50 transition-all duration-300 ${
                isAutoPrinting 
                  ? 'bg-gradient-to-r from-blue-500 to-purple-600 text-white animate-pulse' 
                  : 'bg-danger text-white hover:bg-danger-500'
              }`}
            >
              {isAutoPrinting ? (
                <>
                  <div className="flex items-center gap-2">
                    <div className="animate-spin rounded-full h-5 w-5 border-b-2 border-white"></div>
                    <span>–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –¥—Ä—É–∫ —á–µ—Ä–µ–∑ {autoPrintCountdown}—Å...</span>
                  </div>
                  <DynamicIcon name="printer" size={20} strokeWidth={1.5} className="animate-bounce" />
                </>
              ) : (
                <>
                  –†–æ–∑–¥—Ä—É–∫—É–≤–∞—Ç–∏ –¢–¢–ù 
                  <DynamicIcon name="printer" size={20} strokeWidth={1.5} />
                </>
              )}
            </Button>
          </div>
        )}

        {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞—Å—Ç—É–ø–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è" */}
        {showNextOrder && nextOrderNumber && (
          <Button
            onPress={onNextOrder}
            className="mt-3 w-full bg-primary text-white p-8 rounded-md text-lg font-medium shadow-sm flex items-center justify-center gap-2"
          >
            –ù–∞—Å—Ç—É–ø–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ{nextOrderNumber}{nextOrderDate && <span className="font-normal">(–≤—ñ–¥ {nextOrderDate})</span>}
            <DynamicIcon name="arrow-right-circle" size={20} strokeWidth={1.5} />
          </Button>
        )}

        {/* –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –≤—ñ–¥—Å—É—Ç–Ω—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å */}
        {showNoMoreOrders && (
          <div className="mt-3 w-full bg-gradient-to-r from-blue-50 to-indigo-50 border border-blue-200 rounded-lg p-6 text-center">
            <div className="flex flex-col items-center gap-3">
              <div className="w-12 h-12 bg-blue-100 rounded-full flex items-center justify-center">
                <DynamicIcon name="check-circle" size={24} className="text-blue-600" strokeWidth={1.5} />
              </div>
              <div className="space-y-1">
                <h3 className="text-lg font-semibold text-blue-900">
                  –í—Å—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–Ω—ñ! üéâ
                </h3>
                <p className="text-blue-700 text-sm">
                  –ù–∞—Ä–∞–∑—ñ –±—ñ–ª—å—à–µ –∑–∞–º–æ–≤–ª–µ–Ω—å –¥–ª—è –∫–æ–º–ø–ª–µ–∫—Ç—É–≤–∞–Ω–Ω—è –Ω–µ–º–∞—î –≤ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ
                </p>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

export default OrderChecklist;
