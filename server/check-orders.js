const { PrismaClient } = require('@prisma/client');
const prisma = new PrismaClient();

async function checkData() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º –∏ –¥–∞—Ç–∞–º...');

  // –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
  const statusStats = await prisma.order.groupBy({
    by: ['status'],
    _count: { id: true },
    _max: { orderDate: true },
    _min: { orderDate: true }
  });

  console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º:');
  statusStats.forEach(stat => {
    console.log(`–°—Ç–∞—Ç—É—Å ${stat.status}: ${stat._count.id} –∑–∞–∫–∞–∑–æ–≤, –æ—Ç ${stat._min.orderDate?.toISOString().split('T')[0]} –¥–æ ${stat._max.orderDate?.toISOString().split('T')[0]}`);
  });

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–Ω–∏
  const recentOrders = await prisma.order.findMany({
    where: {
      orderDate: {
        gte: new Date('2025-09-01'),
        lte: new Date('2025-09-05')
      }
    },
    select: {
      id: true,
      status: true,
      orderDate: true,
      orderNumber: true
    },
    orderBy: {
      orderDate: 'desc'
    },
    take: 20
  });

  console.log('\nüìÖ –ù–µ–¥–∞–≤–Ω–∏–µ –∑–∞–∫–∞–∑—ã (2025-09-01 –¥–æ 2025-09-05):');
  recentOrders.forEach(order => {
    console.log(`${order.orderDate?.toISOString().split('T')[0]} | –°—Ç–∞—Ç—É—Å: ${order.status} | –ù–æ–º–µ—Ä: ${order.orderNumber}`);
  });

  await prisma.$disconnect();
}

checkData().catch(console.error);
